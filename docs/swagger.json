{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "1.0"
    },
    "basePath": "/api/go/v1",
    "paths": {
        "/devices/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get mobile devices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "List mobile devices",
                "parameters": [
                    {
                        "type": "string",
                        "description": "os",
                        "name": "os",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/device.RentingDeviceResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperror.HttpError"
                        }
                    }
                }
            }
        },
        "/devices/rent/{device_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "rent device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Rent device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/device.RentingDeviceResponse"
                        }
                    },
                    "400": {
                        "description": "User input error, see error detail",
                        "schema": {
                            "$ref": "#/definitions/apperror.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperror.HttpError"
                        }
                    }
                }
            }
        },
        "/devices/return/{device_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "return device",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "Return device",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Device ID",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/device.RentingDeviceResponse"
                        }
                    },
                    "400": {
                        "description": "User input error, see error detail",
                        "schema": {
                            "$ref": "#/definitions/apperror.HttpError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/apperror.HttpError"
                        }
                    }
                }
            }
        },
        "/users/employee/{empl-id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get users with certain employee_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод получения сотрудников",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "empl-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.UserWithProjectsDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "We couldn`t find users with such employee ID",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/employees": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get employees list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод получения списка специальностей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user.EmpolyeeDTO"
                            }
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one user`s profile from DB and return as json",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод для получения информации о профиле",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/postgres.UserProfile"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Parse xlsx file and put profiles from it to DB",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод для получения информации о профиле",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Xlsx file for parsing",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added all profiles!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Error retrieving the File",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error setting the file size || Error parsing file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/profiles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all users from DB and return as json",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод для получения информации о профилях всех сотрудников",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/postgres.UserProfile"
                            }
                        }
                    }
                }
            }
        },
        "/users/skills": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add skills to user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод для добавления навыков",
                "parameters": [
                    {
                        "description": "Skills what we want to add",
                        "name": "skills",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/postgres.Skill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added!",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "450": {
                        "description": "You sent empty request. Write some skills and try it again.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{user-id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get info about user by user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Метод получения подробной информации о сотруднике",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.UserDTO"
                        }
                    },
                    "404": {
                        "description": "We couldn`t find such user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.HttpError": {
            "description": "Information about the error",
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                }
            }
        },
        "device.RentingDeviceResponse": {
            "description": "Information about the current status of device",
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "example": "Aydar Ibragimov"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Iphone 12 Pro"
                }
            }
        },
        "postgres.Skill": {
            "description": "skills which you want add to profile",
            "type": "object",
            "properties": {
                "skills": {
                    "type": "string",
                    "example": "Some skills"
                }
            }
        },
        "postgres.UserProfile": {
            "description": "User profile information",
            "type": "object",
            "properties": {
                "devices": {
                    "type": "string",
                    "example": ""
                },
                "display_name": {
                    "type": "string",
                    "example": "Зиннатуллин Эмиль Рамилевич"
                },
                "email": {
                    "type": "string",
                    "example": "test@mail.ru"
                },
                "employee": {
                    "type": "string",
                    "example": "Go-developer"
                },
                "mobile_devices": {
                    "type": "string",
                    "example": "iphone 11"
                },
                "phone": {
                    "type": "string",
                    "example": "+79472738427"
                },
                "skills": {
                    "type": "string",
                    "example": "A lot of skills"
                }
            }
        },
        "user.EmpolyeeDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Go-developer"
                }
            }
        },
        "user.UserDTO": {
            "description": "Main info about user and his projects",
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "example": "Зиннатуллин Эмиль Рамилевич"
                },
                "email": {
                    "type": "string",
                    "example": "test@mail.ru"
                },
                "employee": {
                    "type": "string",
                    "example": "Go-developer"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "phone": {
                    "type": "string",
                    "example": "+79648246372"
                },
                "skills": {
                    "type": "string",
                    "example": "A lot of skills"
                }
            }
        },
        "user.UserWithProjectsDTO": {
            "description": "Info about user and his projects",
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "example": "Зиннатуллин Эмиль Рамилевич"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "projects": {
                    "type": "string",
                    "example": "Халвёнок, SCB-monitor"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}